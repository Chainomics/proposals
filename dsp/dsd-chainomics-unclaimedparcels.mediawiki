<pre>
  DSP: dsd-chainomics-unclaimedparcels
  Title: Unclaimed Parcel Allocation Process
  Author: Fabian Sch√§r <f.schaer@unibas.ch>
  Status: Draft
  Type: Process
  Created: 2017-12-31
</pre>

==Abstract==

In total, 9,331 parcels did not sell during the Terraform auction. Originally, unclaimed parcels were to be sold for 1,000 mana each. However, this process could have undesirable consequences. Given recent price developments, it can be assumed that we would see a race in which a few people will profit immensely. Moreover, this situation would likely lead to a proxy bidding war in the form of escalating gas prices. The present proposal describes an alternative process for allocating unclaimed parcels.

==Specification==

Unclaimed parcels are auctioned off via a Dutch auction. At the start of the auction, the price of each unclaimed parcel will be set to S. The prices then decrease over time until a price of 0 is reached. More formally, the current price can be expressed by the following equation:

<code>
P[t] = max(0, S - t * (S/T)) 
</code>

where P[t] is the current price for period t, T is the overall duration of the auction, and t is the duration of the current bid interval. 

Each parcel will be treated as a separate offer. Offers run in parallel. The person who first accepts an offer for a particular parcel, i. e., creates a transaction that includes at least the current price in mana, receives that parcel. If two transactions for the same parcel are processed with the same block, the transaction with the higher bid will be given priority.

A hash and reveal scheme prevents a potential attacker from spying on someone else's bids and using a higher gas price to snipe the auction. The scheme consists of two steps.

===1. Hash Step===

The user picks the parcels and corresponding prices locally. Additionally, the client provides a random number to be used as salt. 

* <code>uint[] x</code>: array with x-coordinates of parcels, which the individual would like to buy.

* <code>uint[] y</code>: array with y-coordinates of parcels, which the individual would like to buy.

* <code>uint[] price</code>: array with a bid for each pair in the parcel arrays. Usually the prices should not vary and should be given by the auction. However, users may have an incentive to slightly increase these values due to the tie-breaker condition (see reveal step).

* <code>bytes salt</code>: random variable which is needed to secure the hash and reveal process.

The user does not disclose any parameters in this step. Instead, the information is concatenated and then hashed, and the resulting hash value is revealed to the network through a reserve transaction.

The reserve transaction includes the following input parameters:
* <code>uint256 mana</code>: Shadow amount which is used to cloak the parcels and price vector in the transaction. Needs to satisfy the condition: mana >= parcels * price.
* <code>bytes32 hashMessage</code>: Hash value of x, y, price and salt. 

===2. Reveal Step===

The individual can claim the land by revealing the components of the reserve transaction, i.e., the bid parameters <code>x</code>, <code>y</code>, <code>price</code> and <code>salt</code>. A grace period between the hash and the reveal step prevents a potential attacker from spying on someone else's bid and potentially making use of blockchain reorgs.  

A reveal transaction is considered valid if:
* <code>sender[hashMessage] == msg.sender</code>
* <code>hashMessage == concatenateAndHash(x, y, price, salt)</code>
* <code>shadowAmount[hashMessage] > price[revealMessage] * numberOfParcels[revealMessage]</code>
* <code>block.height > reserveReceivedAt[hashMessage] + gracePeriod()</code>


The first user to present a valid reveal transaction for a (set of) parcel(s) will be assigned ownership. If two or more reveal transactions for a parcel are included in the same block, the price acts as a tie breaker.

Funds from unsuccesful reveals will be returned to the sender's address. There is no need for an additional penalty, since a potential attacker who spammed reserve transactions without revealing them, would face massive opportunity costs.

If a user cannot or is not willing to present a valid reveal transaction, the corresponding shadow amount will be locked up until the end of the auction. Remaining funds will then be returned to the sender's address.

==Key Advantages==
The Dutch auction has several advantages including:
* Efficient allocation with regard to maximum willingness to pay.
* Process reflects the parcel's non-fungible nature. Offers refer to specific parcels. 
* Auction ends after T.

==Parameter Suggestions==

The starting value S cannot be too large, as this would unnecessarily prolong the auction. On the other hand, it must not be below people's willingness to pay, as this could potentially lead to a socially undesirable allocation of parcels. 

We therefore suggest a relatively large starting value for S, with a convex price decay function. We split the process into three intervals using splines, defined by the following points.

* <code>P[t == 0] := 250,000</code>
* <code>P[t == T/3] := 25,000</code>
* <code>P[t == 2T/3] := 2,500</code>
* <code>P[t == T] := 0</code>

Setting S initially to 250,000 is sufficient. Less than 0.1% of the parcels sold during the terraform auction received bids above 250,000.

We recommend setting T to 9 days, which corresponds to 3 days for each interval. 

{| class="wikitable"
|-
! scope="col"| 
! scope="col"| Interval 1
! scope="col"| Interval 2
! scope="col"| Interval 3
|-
! scope="row"| 3 day total 
|   -225,000 
|    -22,500 
|     -2,500 
|-
! scope="row"| per day     
|    -75,000 
|     -7,500 
|       -750 
|-
! scope="row"| per hour    
|     -3,125 
|     -312.5 
|     -31.25 
|-
! scope="row"| per minute  
|  ~ -52.083 
|   ~ -5.208 
|   ~ -0.521 
|-
! scope="row"| per second  
|   ~ -0.868 
|   ~ -0.087 
|   ~ -0.009 

|}

Moreover, we suggest a grace period of 100 blocks. 

==Acknowledgements==

Thanks to @eordano for his valuable inputs and feedback. 

==Copyright==

This document is under the public domain.
